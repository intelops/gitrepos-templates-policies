repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.5.0
  hooks:
  # Checks for files that contain merge conflict strings.
  - id: check-merge-conflict
  # detects the presence of private keys.
  - id: detect-private-key
  # Trims trailing whitespace in codebase.
  - id: trailing-whitespace
    # Protect commit to main branch
  - id: no-commit-to-branch
    args: [--branch,main]

# Detects hardcoded secrets, security vulnerabilities and policy breaks using GGShield
- repo: https://github.com/zricethezav/gitleaks
  rev: v8.18.1
  hooks:
  - id: gitleaks
    name: Detect hardcoded secrets
    description: Detect hardcoded secrets using Gitleaks


# Checks your git commit messages for style.
- repo: https://github.com/jorisroovers/gitlint
  rev: v0.19.1
  hooks:
  - id: gitlint
    name: Scan Commit messages


# JavaScript Linter
# - repo: https://github.com/pre-commit/mirrors-eslint
#   rev: v8.5.6
#   hooks:
#   - id: eslint
#     name: ESLint
#     description: Runs ESLint on JavaScript codebase
#     language: node
#     files: \.[jt]sx?$  # *.js, *.jsx, *.ts and *.tsx
#     types: [file]
#     additional-dependencies:
#     - eslint-plugin-react@6.10.3


# Detects hardcoded secrets, security vulnerabilities and policy breaks using GGShield
# - repo: https://github.com/zricethezav/gitleaks
#   rev: v8.18.1
#   hooks:
#   - id: gitleaks
#     name: Detect hardcoded secrets
#     description: Detect hardcoded secrets using Gitleaks
#     entry: gitleaks protect --verbose --redact --staged
#     language: node
#     pass_filenames: false

- repo: https://github.com/intelops/gitrepos-templates-policies
  rev: v0.0.1
  hooks:
    # Check for devcontainer.json in the project
  - id: check-devcontainer
    name: Check devcontainer
    description: Checks for existance of .devcontainer.json in the project
    # Check if Dockerfile uses Chainguard base image
  - id: check-dockerfile
    name: Check Dockerfile
    description: Enforce use of Chainguard base images in Dockefiles
    # Check is last commit is signed using Sigstore gitsign 
  - id: check-gitsign
    name: Check gitsign
    description: Check if the last commit is signed with Sigstore gitsign
    # Check if the Dockerfile is present in the project and is a multi-stage Dockerfile
  - id: check-multistage-dockerfile
    name: Check multi-stage Dockerfile
    description: Check the existance of Dockerfile in the project and verify that its a multi-stage Dockerfile